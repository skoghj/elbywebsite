---
import InfoCard from '../components/InfoCard.astro';

// Card data
const people = [
  { image: "./michael_elby.webp", name: "Michael", title: "CEO", category: "Tech & Startup", description: "Michael, engang kaldt “godfather” af Københavns startup-miljø..." },
  { image: "./lars_elby.webp", name: "Lars", title: "CINO", category: "Built Environment & Regulations", description: "Lars er idealisten og designeren, der har arbejdet med grøn omstilling..." },
  { image: "./jacob_elby.webp", name: "Jacob", title: "COO", category: "Operations & Business Development", description: "Jacob har ledet utallige initiativer og co-founded Corti.ai..." },
  { image: "./kristian_elby.webp", name: "Kristian", title: "CCO", category: "Commercial & Sales", description: "Kristian bruger markedskræfterne til at gøre grøn omstilling attraktiv..." },
  { image: "./mads_elby.webp", name: "Mads", title: "CPO", category: "Product & Experience", description: "Mads er perfektionisten der sørger for at samle detaljerne op..." },
  { image: "./marco_elby.webp", name: "Marco", title: "CMO", category: "Marketing", description: "Marcoting bor på Vesterbro, kører elbil og drikker naturvin..." },
];
---

<div class="overflow-clip">
  <section id="horisontalscrollsection" class="h-[500vw]">
    <ul id="horisontalliste" class="list-none pl-0 flex sticky top-[10vh]">
      
      {people.map((person) => (
        <li class="flex w-[100vw] items-center justify-center flex-col overflow-hidden flex-grow-0 flex-shrink-0 flex-auto card">
          <div class="max-w-[800px] mx-auto">
            <InfoCard
              image={person.image}
              name={person.name}
              title={person.title}
              category={person.category}
              description={person.description}
            />
          </div>
        </li>
      ))}
      
    </ul>
  </section>
</div>

<style>
  .card {
    opacity: 0;
    transform: translateX(-100%);
    transition: opacity 0.5s ease, transform 0.5s ease;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const cards = document.querySelectorAll('.card');
    
    const observer = new IntersectionObserver((entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.style.opacity = 1; 
          entry.target.style.transform = 'translateX(0)';
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.5 });

    cards.forEach(card => {
      observer.observe(card);
    });
  });
</script>
